# Build properties used by zAppBuild/build.groovy

# Run zUnit Tests
# Defaults to "false", to enable, set to "true"
#runzTests=true
#
# Comma separated list of additional application property files to load
# Supports both relative path (to ${application}/application-conf/) and absolute path
applicationPropFiles=file.properties,BMS.properties,Cobol.properties,LinkEdit.properties,ZunitConfig.properties
#applicationPropFiles=file.properties,BMS.properties,Cobol.properties,LinkEdit.properties
#
# Comma separated list all source directories included in application build. Supports both absolute
# and relative paths.  Relative assumed to be relative to ${workspace}.
# ex: applicationSrcDirs=${application},/u/build/common/copybooks
applicationSrcDirs=${application}

#
# Comma separated list of the build script processing order
buildOrder=BMS.groovy,Cobol.groovy,LinkEdit.groovy
#
# Comma seperated list of the test script processing order
testOrder=ZunitConfig.groovy
#
# The main build branch.  Used for cloning collections for topic branch builds instead
# of rescanning the entire application.
mainBuildBranch=master

#
# exclude list used when scanning or running full build
excludeFileList=.*,**/*.properties,**/*.xml,**/*.groovy,**/*.json,**/*.md,**/application-conf/*.*

#
# comma-separated list of file patterns for which impact calculation should be skipped. Uses glob file patterns
# sample: skipImpactCalculationList=**/epsmtout.cpy,**/centralCopybooks/*.cpy
skipImpactCalculationList=
#
# Job card, please use \n to indicate a line break and use \ to break the line in this property file
# Example: jobCard=//RUNZUNIT JOB ,MSGCLASS=H,CLASS=A,NOTIFY=&SYSUID,REGION=0M
jobCard=//RUNZUNIT  JOB (TRG),'ZUNIT',CLASS=A,MSGCLASS=X,CLASS=A,REGION=0M
#
# Impact analysis resolution rules (JSON format)
impactResolutionRules=[${copybookRule},${bmsRule},${linkRule},${testcaseRule},${testconfigRule},${testcasePgmRule}]

# Rule to locate Cobol copy books
copybookRule = {"library": "SYSLIB", \
                  "searchPath": [ \
                    {"sourceDir": "${workspace}", "directory": "${application}/FraudDetection/copybook"} \
                 ] \
               }

# Rule to locate BMS maps
bmsRule =   {"library": "SYSLIB", \
              "searchPath": [ \
                 {"sourceDir": "${workspace}", "directory": "${application}/bms"} \
              ] \
            }

# Rule to locate COBOL programs and Link files for rebuilding statically linked load modules
linkRule =   {"category": "LINK", \
              "searchPath": [ \
                 {"sourceDir": "${workspace}", "directory": "${application}/cobol"}, \
                 {"sourceDir": "${workspace}", "directory": "${application}/link"} \
              ] \
            }

# Rule to locate the zUnit test configuration file
# used in dependency resolution and impact analysis
# ** deprecated ** -> zunitTestConfigSearch
testconfigRule =   {"library": "SYSPROG", \
              "searchPath": [ \
                 {"sourceDir": "${workspace}", "directory": "${application}/testcfg"} \
              ] \
            }


# zunitTestConfigSearch
# searchPath to locate zunit config files
# used in dependency resolution and impact analysis
zunitTestConfigSearch = search:[SYSPROG:]${workspace}/?path=${application}/testcfg/*.bzucfg

# Rule to locate the zUnit playback file
# used in dependency resolution and impact analysis
# ** deprecated ** -> zunitPlayfileSearch
testcaseRule =   {"library": "SYSPLAY", \
              "searchPath": [ \
                 {"sourceDir": "${workspace}", "directory": "${application}/testplayfiles"} \
              ] \
            }

# Rule to locate the zUnit test case program when the program or the bzucfg file changes
# used in impact analysis
# ** deprecated ** -> zunitApplicationPgmSearch
testcasePgmRule =   {"category": "PROGRAMDEPENDENCY", \
              "searchPath": [ \
                 {"sourceDir": "${workspace}", "directory": "${application}/cobol"} \
              ] \
            }

#
# zunitApplicationPgmSearch
# searchPath to locate impacted application programs
# see also build-conf/build.properties -> createTestcaseDependency
# used in impact analysis
zunitApplicationPgmSearch = search:[:PROGRAMDEPENDENCY]${workspace}/?path=${application}/cobol/*.cbl;${application}/pli/*.pli
